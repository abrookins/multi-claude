name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with ruff (if available)
      run: |
        # Install ruff if available and run basic linting
        pip install ruff || echo "Ruff not available, skipping lint"
        ruff check . --select E,F || echo "Ruff linting completed with warnings"
      continue-on-error: true
    
    - name: Run tests with pytest
      run: |
        python -m pytest tests/ -v --tb=short
    
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ --cov=mcl --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
      continue-on-error: true

  test-multiple-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run tests
      run: |
        python -m pytest tests/ --tb=short
    
    - name: Test CLI functionality
      run: |
        python mcl.py --help
        python mcl.py ls || echo "No staged tasks, which is expected in CI"